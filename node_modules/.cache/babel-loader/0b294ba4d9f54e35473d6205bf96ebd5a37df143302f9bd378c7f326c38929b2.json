{"ast":null,"code":"var _jsxFileName = \"/home/krowten/website/productionfront/src/App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\n\nimport React, { useState, useEffect } from \"react\";\n\n// Backend URL\n// For local testing: \"http://localhost:5000\"\n// For Railway: your deployed backend URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"https://backend-repo.railway.app\";\nexport default function App() {\n  _s();\n  // ----------------- State -----------------\n  const [backendStatus, setBackendStatus] = useState(\"Checking...\");\n  const [rawMaterials, setRawMaterials] = useState([]);\n  const [newMaterial, setNewMaterial] = useState({\n    name: \"\",\n    weightKg: \"\"\n  });\n  const [message, setMessage] = useState(\"\");\n\n  // ----------------- Check Backend Connectivity -----------------\n  useEffect(() => {\n    fetch(`${API_URL}/api/ping`).then(res => res.json()).then(data => setBackendStatus(data.status)).catch(() => setBackendStatus(\"Backend unreachable\"));\n  }, []);\n\n  // ----------------- Fetch Raw Materials -----------------\n  const fetchMaterials = async () => {\n    try {\n      const res = await fetch(`${API_URL}/api/raw-materials`);\n      const data = await res.json();\n      setRawMaterials(data);\n    } catch (err) {\n      console.error(\"Failed to fetch raw materials:\", err);\n    }\n  };\n\n  // ----------------- Add New Raw Material -----------------\n  const addMaterial = async () => {\n    if (!newMaterial.name || !newMaterial.weightKg) {\n      setMessage(\"Please provide name and weight\");\n      return;\n    }\n    try {\n      const res = await fetch(`${API_URL}/api/raw-materials`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newMaterial)\n      });\n      if (!res.ok) {\n        const errorData = await res.json();\n        throw new Error(errorData.message || \"Failed to save\");\n      }\n      const data = await res.json();\n      setRawMaterials([...rawMaterials, data]);\n      setNewMaterial({\n        name: \"\",\n        weightKg: \"\"\n      });\n      setMessage(`Raw Material saved: ${data.id}`);\n    } catch (err) {\n      setMessage(`Error: ${err.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\",\n      fontFamily: \"Arial\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDD17 Minimal Connectivity Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Backend status: \", backendStatus]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"API URL: \", API_URL]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Raw Materials\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchMaterials,\n      children: \"Fetch Raw Materials\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: rawMaterials.map(mat => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [mat.name, \" - \", mat.weightKg, \" kg\"]\n      }, mat.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Add Test Material\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Name\",\n      value: newMaterial.name,\n      onChange: e => setNewMaterial({\n        ...newMaterial,\n        name: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Weight (kg)\",\n      value: newMaterial.weightKg,\n      onChange: e => setNewMaterial({\n        ...newMaterial,\n        weightKg: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addMaterial,\n      children: \"Add Material\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FMUz0mqQw2X7/w6Ktx/Iu/5s6+k=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","API_URL","App","_s","backendStatus","setBackendStatus","rawMaterials","setRawMaterials","newMaterial","setNewMaterial","name","weightKg","message","setMessage","fetch","then","res","json","data","status","catch","fetchMaterials","err","console","error","addMaterial","method","headers","body","JSON","stringify","ok","errorData","Error","id","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","mat","placeholder","value","onChange","e","target","type","_c","$RefreshReg$"],"sources":["/home/krowten/website/productionfront/src/App.js"],"sourcesContent":["// frontend/src/App.js\n\nimport React, { useState, useEffect } from \"react\";\n\n// Backend URL\n// For local testing: \"http://localhost:5000\"\n// For Railway: your deployed backend URL\nconst API_URL = \"https://backend-repo.railway.app\";\n\nexport default function App() {\n  // ----------------- State -----------------\n  const [backendStatus, setBackendStatus] = useState(\"Checking...\");\n  const [rawMaterials, setRawMaterials] = useState([]);\n  const [newMaterial, setNewMaterial] = useState({ name: \"\", weightKg: \"\" });\n  const [message, setMessage] = useState(\"\");\n\n  // ----------------- Check Backend Connectivity -----------------\n  useEffect(() => {\n    fetch(`${API_URL}/api/ping`)\n      .then((res) => res.json())\n      .then((data) => setBackendStatus(data.status))\n      .catch(() => setBackendStatus(\"Backend unreachable\"));\n  }, []);\n\n  // ----------------- Fetch Raw Materials -----------------\n  const fetchMaterials = async () => {\n    try {\n      const res = await fetch(`${API_URL}/api/raw-materials`);\n      const data = await res.json();\n      setRawMaterials(data);\n    } catch (err) {\n      console.error(\"Failed to fetch raw materials:\", err);\n    }\n  };\n\n  // ----------------- Add New Raw Material -----------------\n  const addMaterial = async () => {\n    if (!newMaterial.name || !newMaterial.weightKg) {\n      setMessage(\"Please provide name and weight\");\n      return;\n    }\n\n    try {\n      const res = await fetch(`${API_URL}/api/raw-materials`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(newMaterial),\n      });\n\n      if (!res.ok) {\n        const errorData = await res.json();\n        throw new Error(errorData.message || \"Failed to save\");\n      }\n\n      const data = await res.json();\n      setRawMaterials([...rawMaterials, data]);\n      setNewMaterial({ name: \"\", weightKg: \"\" });\n      setMessage(`Raw Material saved: ${data.id}`);\n    } catch (err) {\n      setMessage(`Error: ${err.message}`);\n    }\n  };\n\n  return (\n    <div style={{ padding: \"20px\", fontFamily: \"Arial\" }}>\n      <h2>ðŸ”— Minimal Connectivity Test</h2>\n      <p>Backend status: {backendStatus}</p>\n      <p>API URL: {API_URL}</p>\n\n      <hr />\n\n      <h3>Raw Materials</h3>\n      <button onClick={fetchMaterials}>Fetch Raw Materials</button>\n      <ul>\n        {rawMaterials.map((mat) => (\n          <li key={mat.id}>\n            {mat.name} - {mat.weightKg} kg\n          </li>\n        ))}\n      </ul>\n\n      <h4>Add Test Material</h4>\n      <input\n        placeholder=\"Name\"\n        value={newMaterial.name}\n        onChange={(e) =>\n          setNewMaterial({ ...newMaterial, name: e.target.value })\n        }\n      />\n      <input\n        type=\"number\"\n        placeholder=\"Weight (kg)\"\n        value={newMaterial.weightKg}\n        onChange={(e) =>\n          setNewMaterial({ ...newMaterial, weightKg: e.target.value })\n        }\n      />\n      <button onClick={addMaterial}>Add Material</button>\n\n      {message && <p>{message}</p>}\n    </div>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}